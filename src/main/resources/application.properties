spring.application.name=unique

server.port=5000

spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true


# ---- ????? ?? ??
# ?? ?? ???(whitelabel) ?? ?? (default=true)
server.error.whitelabel.enabled=true
# ?? ??? stacktrace ?? ?? (default=always, never, on_trace_param)  ---> ?? ??? ? never
server.error.include-stacktrace=always
# ?? ??? exception ?? ?? (default=true)  ---> ?? ??? ? false
server.error.include-exception=true
# ??? ?? error ??? ??(deprecated)
# server.error.path=/error


# ---- DBCP
#spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@//uniquetomato.store:1521/xe
#spring.datasource.username=uni
#spring.datasource.password=0000
#----local
spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.username=it5
spring.datasource.password=0000

# JPA ----------------------------
spring.jpa.database=oracle
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update
#SQL ??? ???? ??
logging.level.org.hibernate.orm.jdbc.bind=TRACE

#----------------------------Swagger
# ?? URL : http://localhost:5000/swagger-ui/index.html
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

# Producer ??
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Consumer ?? (?? ?)
spring.kafka.consumer.group-id=test-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# GPT --------------------------------------------------
spring.config.import=optional:file:.env[.properties]
openai.api-key=${OPENAI_API_KEY}

# Redis ------------------------------------------------
spring.redis.host=169.211.207.99:6379
spring.redis.port=6379
spring.redis.timeout=3000

# Lettuce ??? ? ?? (??)
#spring.redis.lettuce.pool.max-active=10
#spring.redis.lettuce.pool.max-idle=10
#spring.redis.lettuce.pool.min-idle=2
#spring.redis.lettuce.pool.max-wait=1000

# kafak --------------------------------------------------------------------------------------------
spring.kafka.bootstrap-servers=169.211.207.99:9092
spring.kafka.consumer.group-id=gpt-consumer

# ?? ?? ? ???? ??? ?? earlies ?? ??? / latest ?? ??
spring.kafka.consumer.auto-offset-reset=earliest

# ???? ?? ?? Deserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# ???? ?? ?? Serializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# (??) DB ?? ?? ? ???? ??
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration